# 텍스트마이닝 (TextMining)

- 자연어 처리 (NLP : natural language processing) : 사람이 사용하는 일상의 말이나 언어의 의미를 분석해서 컴퓨터가 처리할 수 있도록 하는 작업

# 자연어(텍스트) 처리 과정

- 전처리 : 오류 수정, 결측치 처리 등
- 토큰화 : 큰 문장을 작은 문장 또는 단어로 분리하는 작업
- 인코딩 : AI 모델이 숫자를 기반으로 하기 때문에 문자로 된 데이터를 숫자 데이터로 변환하는 작업 (보통 빈도수 순으로 번호 부여)
- 임베딩 : 단어간의 관계(상관성)을 분석해서 컴퓨터가 이해하도록 단ㄴ어사전으로 만드는 작업

# 텍스트 전처리 작업의 종류

- 오류 수정 (정제 : cleaning)
- 결측치 처리 : 일반적으로 삭제
- 정규화 : 정규식을 사용해서 필요한 내용만 추출
- 어간 추출 : 단어에서 중요한 부분만 추출 (일반적으로 앞쪽에 위치)
    - ex) 만들었어요, 만들고, 만들다, 만듬 > 만드
- 표제어 추출 : 대표단어를 추출
    - ex) 돌아가셨어요, 죽었어요, 사망했어요 > 죽었다
- 불용어 (stopword) : 학습에 사용하지 않을 단어
- 텍스트 증식(증강)
    - 텍스트 데이터가 적은 경우 데이터의 수를 늘리는 작업
    - 방법
        - 단어 삭제 : 일부 단어를 삭제
            - ex) 나는 학교에 갑니다. > 학교에 갑니다.
        - 단어 교환
            - ex) 나는 학교에 갑니다. > 학교에 나는 갑니다
        - 단어 추가
            - ex) 나는 학교에 갑니다 > 나는 버스로 학교에 갑니다
        - 유사 단어로 변경
            - ex) 나는 학교에 갑니다 > 나는 교실에 갑니다
        - 번역 후 재번역
            - ex) 나는 학교에 갑니다 > i go to school > 나는 학교에 간다

# 토큰화 (tokenization)

- 문장 (corpus)을 작은 문장(chunk)이나 단어(token)로 분리하는 작업
- 영문 : 빈 공백으로 (띄어쓰기가 잘 지켜지기 때문에)
- 한글 토큰화가 힘든 이유
    - 띄어쓰기가 잘 지켜지지 않는다
    - 꾸며주는 특성을 갖는 형용사/부사적 표현이 많음
    - 의태어/의성어가 많음
    - 형태소 분리기를 사용

# 인코딩

- 학습을 위해 문자 데이터를 숫자 데이터로 변환하는 작업
- Tokeninzer()
- CountVectorrizer()
- TfidfVectorizer()

---

- Tokeninzer() 이용
    - 빈도수 기반 분석
    - 빈도수 순으로 내림차순 정렬
        - 빈도수가 동일하면 사전 순서로 정렬
    - 정렬순으로 1부터 인덱스를 부여
    - 문자 토큰을 해당 인덱스로 변환
