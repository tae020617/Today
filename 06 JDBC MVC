package controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;

import model.MemberDTO;

public class MemberDAO {
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	PreparedStatement psmt = null;
	ResultSet rs = null;
	
	// 자원 반납 메서드
	private void getClose() {
		try {
			if (psmt != null) {
				psmt.close();
			}
			if (conn != null) {
				conn.close();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	// DB연결 메서드
	private void getConn() {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			String user = "HR";
			String password = "12345";
			conn = DriverManager.getConnection(url, user, password);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 조회 메서드
	public ArrayList<MemberDTO> selectAll() {
		ArrayList<MemberDTO> list = new ArrayList<MemberDTO>();
		try {
			
			getConn();
			
			String sql = "SELECT * FROM NLPMEMBER";
			psmt = conn.prepareStatement(sql);
			rs = psmt.executeQuery();
			
			while (true) {
				if (rs.next() == true) {
					String id = rs.getString("id");
					String name = rs.getString("name");
					int age = rs.getInt("age");
					int score = rs.getInt("score");
					MemberDTO dto = new MemberDTO(id,"",name,age,score);
					list.add(dto);
				} else {
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();

		} finally {
			getClose();
		}
		return list;
	}
	
	// 탈퇴 메서드
	public int delete(MemberDTO dto) {
		int row = 0;
		try {

			getConn();

			String sql = "DELETE FROM NLPMEMBER WHERE ID=? AND PW=?";
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, dto.getId());
			psmt.setString(2, dto.getPw());

			row = psmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();

		} finally {
			getClose();
		}
		
		return row;
	}
	
	// 로그인 메서드
	public String login(MemberDTO dto) {
		String userName = null;
		try {

			getConn();
			
            String sql = "SELECT * FROM NLPMEMBER WHERE ID=? AND PW=?";
            psmt = conn.prepareStatement(sql);
            psmt.setString(1, dto.getId());
            psmt.setString(2, dto.getPw());

            rs = psmt.executeQuery();

            if (rs.next() == true) {
               userName = rs.getString("name");
            }

         } catch (Exception e) {
            e.printStackTrace();
         } finally {
        	 getClose();
         }
		
		return userName;
	}
	// 회원가입 메서드 (매개변수-전달인자, 리턴값)
	public int join(MemberDTO dto) {
		int row =0;
		try {

			getConn();
			
			String sql = "INSERT INTO NLPMEMBER VALUES(?,?,?,?,?)";
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, dto.getId());
			psmt.setString(2, dto.getPw());
			psmt.setString(3, dto.getName());
			psmt.setInt(4, dto.getAge());
			psmt.setInt(5, dto.getScore());
			row = psmt.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		
		return row;
		
	}
}

----------------------------------------------------------
package model;

public class MemberDTO {
	
	// 1. 필드
	private String id;
	private String pw;
	private String name;
	private int age;
	private int score;
	
	// 2. 메서드
	public MemberDTO(String id, String pw, String name, int age, int score) {
		this.id = id;
		this.pw = pw;
		this.name = name;
		this.age = age;
		this.score = score;
	}
	
	public MemberDTO(String id, String pw) {
		this.id = id;
		this.pw = pw;
	}

	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public String getPw() {
		return pw;
	}
	public void setPw(String pw) {
		this.pw = pw;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public int getScore() {
		return score;
	}
	public void setScore(int score) {
		this.score = score;
	}
}
-----------------------------------------------------
package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;

import controller.MemberDAO;
import model.MemberDTO;

public class Main {

	public static void main(String[] args) {

		System.out.println("==== 회원 관리 프로그램 ====");
		while (true) {
			Connection conn = null;
			PreparedStatement psmt = null;
			ResultSet rs = null;
	         
			System.out.println("[1]회원가입 [2]로그인 [3]회원탈퇴 [4]전체회원 조회");
			System.out.print(">> ");
			int choice = sc.nextInt();

			if (choice == 1) {
				System.out.print("ID 입력 : ");
				String id = sc.next();
				System.out.print("PW 입력 : ");
				String pw = sc.next();
				System.out.print("이름 입력 : ");
				String name = sc.next();
				System.out.print("나이 입력 : ");
				int age = sc.nextInt();
				System.out.print("점수 입력 : ");
				int score = sc.nextInt();

				// 2. join메서드를 이용하기 위한 MemberDao객체 생성
				MemberDAO dao = new MemberDAO();
				// 3. 5개의 데이터를 하나의 자료형 MenmberDAO로 묶어주기
				MemberDTO dto = new MemberDTO(id, pw, name, age, score);
				// 4. join메서드로 MenmberDTO(5개의 데이터) 보내주기
				int row = dao.join(dto); // 전달인자 arg
				// join메서드를 실행하면 리턴값으로 row를 받아온다
				// 5. 결과값 처리
				if (row > 0) {
					System.out.println("성공적으로 회원가입을 완료했습니다.");
				} else {
					System.out.println("회원가입에 실패했습니디.");
				}
			} else if (choice == 2) {
				// 로그인 기능
				System.out.print("ID 입력 : ");
				String id = sc.next();
				System.out.print("PW 입력 : ");
				String pw = sc.next();
				// 기능 자제 : MemberDAO의 login메서드가 실행
				// MemberDAO로 전달
				// MemberDAO로 MemberDTO 형태로 전달
				MemberDAO dao = new MemberDAO();
				MemberDTO dto = new MemberDTO(id, pw);
				String userName = dao.login(dto);
				if (userName != null) {
					System.out.println(userName + "님 환영합니다:)");
				} else {
					System.out.println("로그인 실패");
					System.out.println("아이디 또는 비밀번호를 다시 확인해주세요");
				}
			} else if (choice == 3) {
				// 회원탈퇴 기능
				System.out.print("ID 입력 : ");
				String id = sc.next();
				System.out.print("PW 입력 : ");
				String pw = sc.next();

				MemberDAO dao = new MemberDAO();
				MemberDTO dto = new MemberDTO(id,pw);
				int row = dao.delete(dto);
				// 결과값 처리
				if (row > 0) {
					System.out.println("회원 탈퇴에 성공했습니다.");
				} else {
					System.out.println("회원 탈퇴에 실패했습니다.");
				}
				
			} else if (choice == 4) {
				// 전체회원 조회 기능
				System.out.println("==== 전체 회원 조회 ====");
				System.out.println("ID\t이름\t나이\t점수");
				// MemberDAO > Main으로 데이터 전달(MemberDTO형태, 리턴값 이용)
				MemberDAO dao = new MemberDAO();
				ArrayList<MemberDTO> list = dao.selectAll();
				for(MemberDTO d : list) {
					System.out.println(d.getId() + "\t" + d.getName() + "\t" + d.getAge() + "\t" + d.getScore());
				}
				
			} else {
				// 종료합니다.
				System.out.println("잘못 입력하셨습니다.");
				System.out.println("종료합니다");
				break;
			}
			System.out.println();
		}
	}

}
